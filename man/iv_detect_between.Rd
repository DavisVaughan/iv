% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/between.R
\name{iv_detect_between}
\alias{iv_detect_between}
\title{Detect when a vector falls between an iv}
\usage{
iv_detect_between(needles, haystack, ..., missing = "error")
}
\arguments{
\item{needles}{\verb{[vector, iv]}

\code{needles} should be a vector and \code{haystack} should be an iv. \code{needles}
should have the same type as the start/end components of \code{haystack}.
\itemize{
\item Each element of \code{needles} represents the value to search for.
\item \code{haystack} represents the intervals to search in.
}}

\item{haystack}{\verb{[vector, iv]}

\code{needles} should be a vector and \code{haystack} should be an iv. \code{needles}
should have the same type as the start/end components of \code{haystack}.
\itemize{
\item Each element of \code{needles} represents the value to search for.
\item \code{haystack} represents the intervals to search in.
}}

\item{...}{These dots are for future extensions and must be empty.}

\item{missing}{\verb{[logical(1) / "match" / "error"]}

Handling of missing values in \code{needles}.
\itemize{
\item \code{"match"} matches missing values in \code{needles} to missing values in
\code{haystack}. Missing values will be matched exactly, regardless of the
\code{type}. Matching missing values result in a \code{TRUE} value in the
result, and unmatched missing values result in a \code{FALSE}.
\item \code{"error"} throws an error if any values in \code{needles} are missing.
This is the default.
\item If a single logical value is provided, this represents the value returned
in the result for values in \code{needles} that are missing. You can force
missing values to be unmatched by setting this to \code{FALSE}, and you
can force them to be propagated by setting this to \code{NA}.
}}
}
\value{
A logical vector the same size as \code{needles}.
}
\description{
\code{iv_detect_between()} detects when \code{needles}, a vector, falls between the
bounds of \code{haystack}, an iv. It works similar to \link[base:match]{base::\%in\%}, where
\code{needles[i]} checks for a match in all of \code{haystack}.

This function returns a logical vector the same size as \code{needles} containing
\code{TRUE} if the value in \code{needles} is between any interval in \code{haystack} and
\code{FALSE} otherwise.
\subsection{Missing values}{

Unlike \code{\%in\%}, missing values in \code{needles} force an error to be thrown by
default. \code{\%in\%} detects matches using equality, so it is typically clear that
you also want missing values to match exactly. The relationships implemented
here match using inequalities, and it is much less clear what the desired
result is for missing values. If you have missing values that you'd like to
match exactly, set \code{missing = "match"}. If you'd like missing values to be
unmatched, set \code{missing = FALSE}. If you'd like missing values to be
propagated, set \code{missing = NA}.
}
}
\examples{
x <- as.Date(c("2019-01-05", "2019-01-10", "2019-01-07", "2019-01-20"))

y <- iv_pairs(
  as.Date(c("2019-01-01", "2019-01-03")),
  as.Date(c("2019-01-04", "2019-01-08")),
  as.Date(c("2019-01-07", "2019-01-09")),
  as.Date(c("2019-01-10", "2019-01-20")),
  as.Date(c("2019-01-15", "2019-01-20"))
)

x
y

# Detect if any location where `x` is between the intervals in `y`
iv_detect_between(x, y)

# ---------------------------------------------------------------------------

a <- c(1, NA)
b <- iv(c(NA, NA), c(NA, NA))

# Missing values error by default
try(iv_detect_between(a, b))

# If you'd like missing values to match exactly, set `missing = "match"`
iv_detect_between(a, b, missing = "match")

# If you'd like missing values to be treated as unmatched, set
# `missing = FALSE`
iv_detect_between(a, b, missing = FALSE)

# If you'd like to propagate missing values, set `missing = NA`
iv_detect_between(a, b, missing = NA)
}
\seealso{
\link[=relation-locate]{Locating relationships}

\link[=iv_locate_between]{Locating where a vector falls between an iv}

\link[=iv_detect_parallel_between]{Detecting when a vector falls between an iv in parallel}
}
